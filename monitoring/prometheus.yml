# HealthScopeAI Prometheus Configuration
# Monitoring and metrics collection for production deployment

global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # HealthScopeAI Application
  - job_name: 'healthscope-app'
    static_configs:
      - targets: ['healthscope-app:8501']
    metrics_path: /_stcore/metrics
    scrape_interval: 30s
    scrape_timeout: 10s

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s

  # Redis Cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s

  # Nginx Reverse Proxy
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:80']
    scrape_interval: 30s

  # Docker containers metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-host:9323']
    scrape_interval: 30s

  # Node Exporter (system metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # cAdvisor (container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

# Custom recording rules for HealthScopeAI metrics
recording_rules:
  - name: healthscope_rules
    rules:
      # Application performance metrics
      - record: healthscope:prediction_rate_5m
        expr: rate(healthscope_predictions_total[5m])
      
      - record: healthscope:prediction_latency_p95
        expr: histogram_quantile(0.95, rate(healthscope_prediction_duration_seconds_bucket[5m]))
      
      - record: healthscope:error_rate_5m
        expr: rate(healthscope_errors_total[5m]) / rate(healthscope_requests_total[5m])
      
      # Database metrics
      - record: healthscope:db_connections_active
        expr: pg_stat_database_numbackends{datname="healthscope_ai"}
      
      # System resource usage
      - record: healthscope:memory_usage_percent
        expr: (container_memory_usage_bytes{name="healthscope-app"} / container_spec_memory_limit_bytes{name="healthscope-app"}) * 100
      
      - record: healthscope:cpu_usage_percent
        expr: rate(container_cpu_usage_seconds_total{name="healthscope-app"}[5m]) * 100

# Alerting rules for critical issues
alerting_rules:
  - name: healthscope_alerts
    rules:
      # High error rate
      - alert: HighErrorRate
        expr: healthscope:error_rate_5m > 0.05
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes"
      
      # High response time
      - alert: HighResponseTime
        expr: healthscope:prediction_latency_p95 > 1
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s"
      
      # Low prediction rate
      - alert: LowPredictionRate
        expr: healthscope:prediction_rate_5m < 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Low prediction rate"
          description: "Prediction rate is {{ $value }} requests/second"
      
      # High memory usage
      - alert: HighMemoryUsage
        expr: healthscope:memory_usage_percent > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value | humanizePercentage }}"
      
      # High CPU usage
      - alert: HighCPUUsage
        expr: healthscope:cpu_usage_percent > 80
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value | humanizePercentage }}"
      
      # Database connection issues
      - alert: DatabaseConnectionIssues
        expr: healthscope:db_connections_active > 50
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Too many database connections"
          description: "Active database connections: {{ $value }}"
      
      # Application down
      - alert: ApplicationDown
        expr: up{job="healthscope-app"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "HealthScopeAI application is down"
          description: "The main application has been down for more than 1 minute"
      
      # Database down
      - alert: DatabaseDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL database is down"
          description: "The database has been down for more than 1 minute"
